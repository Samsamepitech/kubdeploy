# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and Deploy to GKE

on:
  push:
    branches:
      - main
      - master

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1    # Add your cluster name here.
  GKE_ZONE: us-central1-c   # Add your cluster zone here.
  DEPLOYMENT_NAME: gke-test # Add your deployment name here.
  IMAGE: static-site

jobs:

  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: 'Google auth'
      id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        create_credentials_file: 'true'
        workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
        service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'  

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    - name: push to gcr   
      uses: RafikFarhad/push-to-gcr-github-action@v5-beta
      with:
        registry: europe-west1-docker.pkg.dev
        project_id: taibi-samira
        image_name: reg-flask/adservice
        image_tag: ${{github.sha}}
        dockerfile: ./ARCH-adservice/Dockerfile
        context: .

   
    # # Configure Docker to use the gcloud command-line tool as a credential
    # # helper for authentication
    # - run: |-
    #     gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # # Build the Docker image
    # - name: Build and push Docker image
    #   uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
    #   with:
    #     context: .
    #     file: ./ARCH-adservice/Dockerfile
    #     push: true
    #     tags: "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
    #     # labels: ${{ steps.meta.outputs.labels }}

    # - name: Build
    #   run: |-
    #     docker build  \
    #       --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
    #       --build-arg GITHUB_SHA="$GITHUB_SHA" \
    #       --build-arg GITHUB_REF="$GITHUB_REF" \
    #       .

    # Push the Docker image to Google Container Registry
    # - name: Publish
    #   run: |-
    #     docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"Â²

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        ./kustomize build ./ARCH-adservice/manifest | kubectl apply -f -

    
    # kubectl rollout status deployment/$DEPLOYMENT_NAME
    # kubectl get services -o wide
